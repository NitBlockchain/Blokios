/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-summernote-view.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';
var NgxSummernoteViewDirective = /** @class */ (function () {
    function NgxSummernoteViewDirective(renderer2, element) {
        this.renderer2 = renderer2;
        this._element = element.nativeElement;
    }
    Object.defineProperty(NgxSummernoteViewDirective.prototype, "ngxSummernoteView", {
        set: /**
         * @param {?} content
         * @return {?}
         */
        function (content) {
            this._element.innerHTML = content || '';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgxSummernoteViewDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.renderer2.addClass(this._element, 'ngx-summernote-view');
    };
    NgxSummernoteViewDirective.decorators = [
        { type: Directive, args: [{
                    // tslint:disable-next-line:directive-selector
                    selector: '[ngxSummernoteView]'
                },] }
    ];
    /** @nocollapse */
    NgxSummernoteViewDirective.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    NgxSummernoteViewDirective.propDecorators = {
        ngxSummernoteView: [{ type: Input }]
    };
    return NgxSummernoteViewDirective;
}());
export { NgxSummernoteViewDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxSummernoteViewDirective.prototype._element;
    /**
     * @type {?}
     * @private
     */
    NgxSummernoteViewDirective.prototype.renderer2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXN1bW1lcm5vdGUtdmlldy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc3VtbWVybm90ZS8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtc3VtbWVybm90ZS12aWV3LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQzFDLE1BQU0sZUFBZSxDQUFDO0FBSXZCO0lBV0ksb0NBQ1ksU0FBb0IsRUFDNUIsT0FBbUI7UUFEWCxjQUFTLEdBQVQsU0FBUyxDQUFXO1FBRzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBWEQsc0JBQWEseURBQWlCOzs7OztRQUE5QixVQUErQixPQUFlO1lBQzFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDNUMsQ0FBQzs7O09BQUE7Ozs7SUFXRCxvREFBZTs7O0lBQWY7UUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLHFCQUFxQixDQUFDLENBQUM7SUFDbEUsQ0FBQzs7Z0JBcEJKLFNBQVMsU0FBQzs7b0JBRVAsUUFBUSxFQUFFLHFCQUFxQjtpQkFDbEM7Ozs7Z0JBUmlDLFNBQVM7Z0JBQXJCLFVBQVU7OztvQ0FVM0IsS0FBSzs7SUFnQlYsaUNBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQWpCWSwwQkFBMEI7Ozs7OztJQUtuQyw4Q0FBc0I7Ozs7O0lBR2xCLCtDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgRGlyZWN0aXZlLCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBBZnRlclZpZXdJbml0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5kZWNsYXJlIHZhciAkO1xuXG5ARGlyZWN0aXZlKHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yXG4gICAgc2VsZWN0b3I6ICdbbmd4U3VtbWVybm90ZVZpZXddJ1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hTdW1tZXJub3RlVmlld0RpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIEBJbnB1dCgpIHNldCBuZ3hTdW1tZXJub3RlVmlldyhjb250ZW50OiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5pbm5lckhUTUwgPSBjb250ZW50IHx8ICcnO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2VsZW1lbnQ6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlbmRlcmVyMjogUmVuZGVyZXIyLFxuICAgICAgICBlbGVtZW50OiBFbGVtZW50UmVmXG4gICAgKSB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyMi5hZGRDbGFzcyh0aGlzLl9lbGVtZW50LCAnbmd4LXN1bW1lcm5vdGUtdmlldycpO1xuICAgIH1cbn1cbiJdfQ==