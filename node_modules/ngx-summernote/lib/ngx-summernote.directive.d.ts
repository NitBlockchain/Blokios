import { HttpClient } from '@angular/common/http';
import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { SummernoteOptions } from './summernote-options';
export declare class NgxSummernoteDirective implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {
    private el;
    private zone;
    private http;
    ngxSummernote: SummernoteOptions;
    summernoteModel: any;
    summernoteModelChange: EventEmitter<any>;
    imageUpload: EventEmitter<any>;
    mediaDelete: EventEmitter<any>;
    blur: EventEmitter<any>;
    ngxSummernoteDisabled: boolean;
    private _options;
    private SPECIAL_TAGS;
    private INNER_HTML_ATTR;
    private _hasSpecialTag;
    private _$element;
    private _editor;
    private _model;
    private _oldModel;
    private _editorInitialized;
    private uploadSub;
    constructor(el: ElementRef, zone: NgZone, http: HttpClient);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(content: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    private updateEditor;
    private updateModel;
    private initListeners;
    private createEditor;
    private setHtml;
    private setContent;
    private destroyEditor;
    private uploadImage;
    insertFromDataURL(files: any): void;
}
